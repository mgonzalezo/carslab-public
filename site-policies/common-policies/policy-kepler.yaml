#for this to take affect, the ManagedCluster must have "kepler: "true"" as a label
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-kepler
  namespace: ztp-common-cars2
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    ran.openshift.io/ztp-deploy-wave: "66"
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-enableuserworkload
        spec:
          remediationAction: inform
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: enable-user-workload-monitoring
                  namespace: openshift-monitoring
                data:
                  alertmanagerMain: "false"
                  enableUserWorkload: "true"
                  grafana: "false"
                  prometheusK8s: 24h
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-applyuserworkload
        spec:
          remediationAction: inform
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: cluster-monitoring-config
                  namespace: openshift-monitoring
                data:
                  config.yaml: |
                    alertmanagerMain:
                      enabled: '{{ (fromConfigMap "openshift-monitoring" "enable-user-workload-monitoring" "alertmanagerMain") | toBool }}'
                    enableUserWorkload: '{{ (fromConfigMap "openshift-monitoring" "enable-user-workload-monitoring" "enableUserWorkload") | toBool }}'
                    grafana:
                      enabled: '{{ (fromConfigMap "openshift-monitoring" "enable-user-workload-monitoring" "grafana") | toBool }}'
                    prometheusK8s:
                       retention: '{{ (fromConfigMap "openshift-monitoring" "enable-user-workload-monitoring" "prometheusK8s") }}'
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-catsrc
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: operators.coreos.com/v1alpha1
                kind: CatalogSource
                metadata:
                  name: community-operators-kepler
                  namespace: openshift-marketplace
                spec:
                  displayName: Community Operators - Kepler
                  grpcPodConfig:
                    nodeSelector:
                      kubernetes.io/os: linux
                      node-role.kubernetes.io/master: ""
                    priorityClassName: system-cluster-critical
                    securityContextConfig: restricted
                    tolerations:
                    - effect: NoSchedule
                      key: node-role.kubernetes.io/master
                      operator: Exists
                    - effect: NoExecute
                      key: node.kubernetes.io/unreachable
                      operator: Exists
                      tolerationSeconds: 120
                    - effect: NoExecute
                      key: node.kubernetes.io/not-ready
                      operator: Exists
                      tolerationSeconds: 120
                  icon:
                    base64data: ""
                    mediatype: ""
                  image: registry.redhat.io/redhat/community-operator-index:v4.14
                  priority: -400
                  publisher: Red Hat
                  sourceType: grpc
                  updateStrategy:
                    registryPoll:
                      interval: 10m
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-subs
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  labels:
                    operators.coreos.com/kepler-operator.openshift-operators: ""
                  name: kepler-operator
                  namespace: openshift-operators
                spec:
                  channel: alpha
                  installPlanApproval: Automatic
                  name: kepler-operator
                  source: community-operators-kepler
                  sourceNamespace: openshift-marketplace
                  startingCSV: kepler-operator.v0.8.0
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kepler-kepler
        spec:
          remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: kepler.system.sustainable.computing.io/v1alpha1
                kind: Kepler
                metadata:
                  labels:
                    app.kubernetes.io/instance: kepler
                    app.kubernetes.io/name: kepler
                    app.kubernetes.io/part-of: kepler-operator
                  name: kepler
                spec:
                  exporter:
                    deployment:
                      nodeSelector:
                        kubernetes.io/os: linux
                      port: 9103
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-kepler
  namespace: ztp-common-cars2
placementRef:
  name: placement-policy-kepler
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-kepler
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-kepler
  namespace: ztp-common-cars2
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: kepler, operator: In, values: ["true"]}
